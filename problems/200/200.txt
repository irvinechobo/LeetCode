200. Number of Islands <Medium>


class Solution {
public:
    int numIslands(vector<vector<char>>& grid) {
        int H = grid.size();
        if(H == 0) return 0;
        int W = grid[0].size();
        
        int dirRow[4] = {-1, 1, 0, 0};
        int dirCol[4] = {0, 0, -1, 1};
        
        queue<pair<int,int>> Q;
        //vector<vector<bool>> visited(H, vector<bool>(W, false));
        int count = 0;
        
        for(int i = 0; i < H; i++){
            for(int j = 0; j < W; j++){
                
                if(grid[i][j] == '1'/* && !visited[i][j]*/){
                    Q.push({i,j});
                    //visited[i][j] = true;
                    grid[i][j] = '0';
                    count++;
                    cout << i << ", " << j << endl;
                    while(!Q.empty()){
                        int row = Q.front().first;
                        int col = Q.front().second;
                        Q.pop();

                        for(int k = 0; k < 4; k++){
                            int x = row + dirRow[k];
                            int y = col + dirCol[k];

                            if(x >= 0 && x < H && y >= 0 && y < W /*&& !visited[x][y]*/ && grid[x][y] == '1'){
                                //visited[x][y] = true;
                                grid[x][y] = '0';
                                Q.push({x,y});
                            }
                        }
                    }
                }
            }
        }
        
        return count;
    }
};