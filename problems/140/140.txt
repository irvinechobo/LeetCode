140. Word Break II  <Medium>


class Solution {
public:    

    vector<string> wordBreak(string s, vector<string>& wordDict) {
        unordered_map<int, vector<string>> memo; //To store the result
        unordered_set<string> words(wordDict.begin(), wordDict.end());

        return helper(s, 0, words, memo);
    }
    
    
    vector<string> helper(string s, int index, unordered_set<string> &words, unordered_map<int, vector<string>> &memo){
        int N = s.size();

        vector<string> res, sub;
        if(N == index)
        {
            res.push_back(" ");
            return res;
        }
        
        if(memo.count(index))
            return memo[index];
        
        string temp;
        for(int i = index; i < N; i++)
        {
            temp += s[i];
            if(words.count(temp))
            {
                sub = helper(s, i+1, words, memo);
                for(auto s : sub)
                    res.push_back(s == " " ? temp : temp + " " + s);
            }
        }
        
        return memo[index] = res;
    }
};