289. Game of Life <Medium>


class Solution {
public:
    int dirRow[8] = {-1, -1, -1, 0, 1, 1, 1, 0};
    int dirCol[8] = {-1, 0, 1, 1, 1, 0, -1, -1};
    
    void gameOfLife(vector<vector<int>>& board) {
        int H = board.size();
        int W = board[0].size();
        
        //set<pair<int,int>> visited;
        
        for(int i = 0; i < H; i++){
            for(int j = 0; j < W; j++){
                
                int liveCount = 0;
                for(int k = 0; k < 8; k++){
                    int x = i + dirRow[k];
                    int y = j + dirCol[k];
                    
                    if(x >= 0 & x < H && y >= 0 && y < W){//} & visited.count({x,y}) == 0){
                        if(board[x][y] >= 1)
                            liveCount++;
                    }
                }
                
                if(board[i][j] == 1)
                    if(liveCount < 2 || liveCount > 3)
                        board[i][j] = 2;
                    else
                        board[i][j] = 1;
                
                else
                    if(liveCount == 3)
                        board[i][j] = -1;
                    else
                        board[i][j] = 0;
                    
                //visited.insert({i,j});
            }
        }
        
        for(int i = 0; i < H; i++){
            for(int j = 0; j < W; j++){
                if(board[i][j] == 2)
                    board[i][j] = 0;
                else if(board[i][j] == -1)
                    board[i][j] = 1;
            }
        }
        
    }
};